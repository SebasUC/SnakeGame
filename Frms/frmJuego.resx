<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblCabeza.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4gHYSUNDX1BST0ZJTEUAAQEAAAHIAAAAAAQwAABtbnRyUkdCIFhZ
        WiAH4AABAAEAAAAAAABhY3NwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlkZXNjAAAA8AAA
        ACRyWFlaAAABFAAAABRnWFlaAAABKAAAABRiWFlaAAABPAAAABR3dHB0AAABUAAAABRyVFJDAAABZAAA
        AChnVFJDAAABZAAAAChiVFJDAAABZAAAAChjcHJ0AAABjAAAADxtbHVjAAAAAAAAAAEAAAAMZW5VUwAA
        AAgAAAAcAHMAUgBHAEJYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAA
        AAAAACSgAAAPhAAAts9YWVogAAAAAAAA9tYAAQAAAADTLXBhcmEAAAAAAAQAAAACZmYAAPKnAAANWQAA
        E9AAAApbAAAAAAAAAABtbHVjAAAAAAAAAAEAAAAMZW5VUwAAACAAAAAcAEcAbwBvAGcAbABlACAASQBu
        AGMALgAgADIAMAAxADb/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkKDA8MCgsO
        CwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCAAZABkDASIAAhEBAxEB/8QAGgAAAQUB
        AAAAAAAAAAAAAAAACAIFBgcJBP/EADIQAAAFAwIACgsAAAAAAAAAAAECAwQFAAYRBxITFRYhIjFBUZTS
        NTZVVmFic5GTstH/xAAaAQABBQEAAAAAAAAAAAAAAAABAgMFBgcI/8QAJBEAAgAFBAIDAQAAAAAAAAAA
        AQIAAwQREgUGIjEhQTJhYsH/2gAMAwEAAhEDEQA/AJVaNo2orakKqrbMSc549uYxjMkxERFMuREcU7cj
        bQ91YjwKXlqxY7SNaH0JtC/msgZwLmKZKO0BIAAkVRMu0Sj24yADnvqJVy5rqanpla8qpZlLchyPRJt0
        YinDKbGGcbNtDHqrEeBS8tChxZG+z234S/ytC9N9I1r7gpaecSBmbdkQ5G+CAPCrAXdgc9RQ5s9vPWf2
        0/y/etF2BI1CRImVNSWxmYlSTe4BYH34/sOywQLn3BGQKF9vpmzbrSvp4nAMbNSgXMGKhxRXKIbyH252
        ZATAORDPQLgamOQ76DiM9GtPoJ/qFdVHV9k1Oqzw9TV3wGI4dKCSB8vNr9wWQv2YKMyN9oal2/eEXfTx
        lBwcY+ZmhklDlScLOSmKZQ4AO03RMXrARAUy4oWtofGlVWlXHbG3aiRLaVPqc1VVVRhawGX6N737+oWq
        nomP/9k=
</value>
  </data>
  <data name="lblTrofeo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KBqB6VrxUQAAAABJRU5ErkJggg==
</value>
  </data>
</root>